// Code generated by go-swagger; DO NOT EDIT.

package expressions

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/guigolab/rnaget-client/models"
)

// SearchExpressionFiltersReader is a Reader for the SearchExpressionFilters structure.
type SearchExpressionFiltersReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SearchExpressionFiltersReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewSearchExpressionFiltersOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewSearchExpressionFiltersBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewSearchExpressionFiltersOK creates a SearchExpressionFiltersOK with default headers values
func NewSearchExpressionFiltersOK() *SearchExpressionFiltersOK {
	return &SearchExpressionFiltersOK{}
}

/*SearchExpressionFiltersOK handles this case with default header values.

successful operation
*/
type SearchExpressionFiltersOK struct {
	Payload *models.ExpressionSearchFilter
}

func (o *SearchExpressionFiltersOK) Error() string {
	return fmt.Sprintf("[GET /expressions/search/filters][%d] searchExpressionFiltersOK  %+v", 200, o.Payload)
}

func (o *SearchExpressionFiltersOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ExpressionSearchFilter)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchExpressionFiltersBadRequest creates a SearchExpressionFiltersBadRequest with default headers values
func NewSearchExpressionFiltersBadRequest() *SearchExpressionFiltersBadRequest {
	return &SearchExpressionFiltersBadRequest{}
}

/*SearchExpressionFiltersBadRequest handles this case with default header values.

Error
*/
type SearchExpressionFiltersBadRequest struct {
}

func (o *SearchExpressionFiltersBadRequest) Error() string {
	return fmt.Sprintf("[GET /expressions/search/filters][%d] searchExpressionFiltersBadRequest ", 400)
}

func (o *SearchExpressionFiltersBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
