// Code generated by go-swagger; DO NOT EDIT.

package expressions

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/guigolab/rnaget-client/models"
)

// GetExpressionByIDReader is a Reader for the GetExpressionByID structure.
type GetExpressionByIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetExpressionByIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetExpressionByIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewGetExpressionByIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetExpressionByIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetExpressionByIDOK creates a GetExpressionByIDOK with default headers values
func NewGetExpressionByIDOK() *GetExpressionByIDOK {
	return &GetExpressionByIDOK{}
}

/*GetExpressionByIDOK handles this case with default header values.

successful operation
*/
type GetExpressionByIDOK struct {
	Payload *models.File
}

func (o *GetExpressionByIDOK) Error() string {
	return fmt.Sprintf("[GET /expressions/{expressionId}][%d] getExpressionByIdOK  %+v", 200, o.Payload)
}

func (o *GetExpressionByIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.File)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetExpressionByIDBadRequest creates a GetExpressionByIDBadRequest with default headers values
func NewGetExpressionByIDBadRequest() *GetExpressionByIDBadRequest {
	return &GetExpressionByIDBadRequest{}
}

/*GetExpressionByIDBadRequest handles this case with default header values.

Invalid ID supplied
*/
type GetExpressionByIDBadRequest struct {
}

func (o *GetExpressionByIDBadRequest) Error() string {
	return fmt.Sprintf("[GET /expressions/{expressionId}][%d] getExpressionByIdBadRequest ", 400)
}

func (o *GetExpressionByIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetExpressionByIDNotFound creates a GetExpressionByIDNotFound with default headers values
func NewGetExpressionByIDNotFound() *GetExpressionByIDNotFound {
	return &GetExpressionByIDNotFound{}
}

/*GetExpressionByIDNotFound handles this case with default header values.

Expression not found
*/
type GetExpressionByIDNotFound struct {
}

func (o *GetExpressionByIDNotFound) Error() string {
	return fmt.Sprintf("[GET /expressions/{expressionId}][%d] getExpressionByIdNotFound ", 404)
}

func (o *GetExpressionByIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
