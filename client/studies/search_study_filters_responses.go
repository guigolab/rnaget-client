// Code generated by go-swagger; DO NOT EDIT.

package studies

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/guigolab/rnaget-client/models"
)

// SearchStudyFiltersReader is a Reader for the SearchStudyFilters structure.
type SearchStudyFiltersReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SearchStudyFiltersReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewSearchStudyFiltersOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewSearchStudyFiltersBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewSearchStudyFiltersOK creates a SearchStudyFiltersOK with default headers values
func NewSearchStudyFiltersOK() *SearchStudyFiltersOK {
	return &SearchStudyFiltersOK{}
}

/*SearchStudyFiltersOK handles this case with default header values.

successful operation
*/
type SearchStudyFiltersOK struct {
	Payload []*models.SearchFilter
}

func (o *SearchStudyFiltersOK) Error() string {
	return fmt.Sprintf("[GET /studies/search/filters][%d] searchStudyFiltersOK  %+v", 200, o.Payload)
}

func (o *SearchStudyFiltersOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchStudyFiltersBadRequest creates a SearchStudyFiltersBadRequest with default headers values
func NewSearchStudyFiltersBadRequest() *SearchStudyFiltersBadRequest {
	return &SearchStudyFiltersBadRequest{}
}

/*SearchStudyFiltersBadRequest handles this case with default header values.

Error
*/
type SearchStudyFiltersBadRequest struct {
}

func (o *SearchStudyFiltersBadRequest) Error() string {
	return fmt.Sprintf("[GET /studies/search/filters][%d] searchStudyFiltersBadRequest ", 400)
}

func (o *SearchStudyFiltersBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
