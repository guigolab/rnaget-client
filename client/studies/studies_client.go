// Code generated by go-swagger; DO NOT EDIT.

package studies

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// New creates a new studies API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) *Client {
	return &Client{transport: transport, formats: formats}
}

/*
Client for studies API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

/*
GetStudyByID finds study by ID

Returns a single specified study
*/
func (a *Client) GetStudyByID(params *GetStudyByIDParams, authInfo runtime.ClientAuthInfoWriter) (*GetStudyByIDOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetStudyByIDParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "getStudyById",
		Method:             "GET",
		PathPattern:        "/studies/{studyId}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{""},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetStudyByIDReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	return result.(*GetStudyByIDOK), nil

}

/*
SearchStudies searches for studies matching filters

Search for studies matching filters
*/
func (a *Client) SearchStudies(params *SearchStudiesParams, authInfo runtime.ClientAuthInfoWriter) (*SearchStudiesOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewSearchStudiesParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "searchStudies",
		Method:             "GET",
		PathPattern:        "/studies/search",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{""},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &SearchStudiesReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	return result.(*SearchStudiesOK), nil

}

/*
SearchStudyFilters returns filters for study searches

Get filters for study searches
*/
func (a *Client) SearchStudyFilters(params *SearchStudyFiltersParams, authInfo runtime.ClientAuthInfoWriter) (*SearchStudyFiltersOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewSearchStudyFiltersParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "searchStudyFilters",
		Method:             "GET",
		PathPattern:        "/studies/search/filters",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{""},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &SearchStudyFiltersReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	return result.(*SearchStudyFiltersOK), nil

}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
