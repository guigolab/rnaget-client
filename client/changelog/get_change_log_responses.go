// Code generated by go-swagger; DO NOT EDIT.

package changelog

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/guigolab/rnaget-client/models"
)

// GetChangeLogReader is a Reader for the GetChangeLog structure.
type GetChangeLogReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetChangeLogReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetChangeLogOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewGetChangeLogBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetChangeLogNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetChangeLogOK creates a GetChangeLogOK with default headers values
func NewGetChangeLogOK() *GetChangeLogOK {
	return &GetChangeLogOK{}
}

/*GetChangeLogOK handles this case with default header values.

Successful operation
*/
type GetChangeLogOK struct {
	Payload *models.ChangeLog
}

func (o *GetChangeLogOK) Error() string {
	return fmt.Sprintf("[GET /changelog/{version}][%d] getChangeLogOK  %+v", 200, o.Payload)
}

func (o *GetChangeLogOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ChangeLog)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetChangeLogBadRequest creates a GetChangeLogBadRequest with default headers values
func NewGetChangeLogBadRequest() *GetChangeLogBadRequest {
	return &GetChangeLogBadRequest{}
}

/*GetChangeLogBadRequest handles this case with default header values.

Invalid ID supplied
*/
type GetChangeLogBadRequest struct {
}

func (o *GetChangeLogBadRequest) Error() string {
	return fmt.Sprintf("[GET /changelog/{version}][%d] getChangeLogBadRequest ", 400)
}

func (o *GetChangeLogBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetChangeLogNotFound creates a GetChangeLogNotFound with default headers values
func NewGetChangeLogNotFound() *GetChangeLogNotFound {
	return &GetChangeLogNotFound{}
}

/*GetChangeLogNotFound handles this case with default header values.

Change log not found
*/
type GetChangeLogNotFound struct {
}

func (o *GetChangeLogNotFound) Error() string {
	return fmt.Sprintf("[GET /changelog/{version}][%d] getChangeLogNotFound ", 404)
}

func (o *GetChangeLogNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
